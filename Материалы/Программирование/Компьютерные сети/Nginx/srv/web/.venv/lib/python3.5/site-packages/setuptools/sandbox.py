2, align 4                       ; <i32*> [#uses=6]
  %c2 = alloca <4 x i32>, align 16                ; <<4 x i32>*> [#uses=2]
  %9 = alloca <2 x i32>, align 8                  ; <<2 x i32>*> [#uses=2]
  store %struct._image2d_t* %input, %struct._image2d_t** %1
  store i8 addrspace(1)* %dst, i8 addrspace(1)** %2
  store <4 x i32> %srcOffset, <4 x i32>* %3
  store i32 %dstOffset, i32* %4
  store <2 x i32> %Pitch, <2 x i32>* %5
  store i32 %LSize, i32* %6
  store i32 %Region, i32* %7
  %10 = call i32 @get_global_id(i32 1)            ; <i32> [#uses=1]
  store i32 %10, i32* %y
  %11 = load <4 x i32>* %3                        ; <<4 x i32>> [#uses=1]
  %12 = extractelement <4 x i32> %11, i32 1       ; <i32> [#uses=1]
  %13 = load i32* %y                              ; <i32> [#uses=1]
  %14 = add nsw i32 %12, %13                      ; <i32> [#uses=1]
  store i32 %14, i32* %yOffset
  %15 = load i32* %4                              ; <i32> [#uses=1]
  %16 = load i32* %y                              ; <i32> [#uses=1]
  %17 = load <2 x i32>* %5                        ; <<2 x i32>> [#uses=1]
  %18 = extractelement <2 x i32> %17, i32 0       ; <i32> [#uses=1]
  %19 = mul i32 %16, %18                          ; <i32> [#uses=1]
  %20 = add i32 %15, %19                          ; <i32> [#uses=1]
  store i32 %20, i32* %DstOffset
  %21 = load i32* %6                              ; <i32> [#uses=1]
  %22 = load i32* %DstOffset                      ; <i32> [#uses=1]
  %23 = and i32 %22, 3                            ; <i32> [#uses=1]
  %24 = add i32 %21, %23                          ; <i32> [#uses=1]
  store i32 %24, i32* %Temp
  %25 = load i32* %Temp                           ; <i32> [#uses=1]
  %26 = and i32 %25, 3                            ; <i32> [#uses=1]
  %27 = sub i32 4, %26                            ; <i32> [#uses=1]
  %28 = and i32 %27, 3                            ; <i32> [#uses=1]
  store i32 %28, i32* %Temp1
  %29 = load i32* %Temp1                          ; <i32> [#uses=1]
  %30 = load i32* %6                              ; <i32> [#uses=1]
  %31 = add i32 %30, %29                          ; <i32> [#uses=1]
  store i32 %31, i32* %6
  %32 = load i32* %7                              ; <i32> [#uses=1]
  %33 = load i32* %6                              ; <i32> [#uses=1]
  %34 = sub i32 %32, %33                          ; <i32> [#uses=1]
  %35 = and i32 %34, 15                           ; <i32> [#uses=1]
  store i32 %35, i32* %RSize
  %36 = load i32* %7                              ; <i32> [#uses=1]
  %37 = load i32* %6                              ; <i32> [#uses=1]
  %38 = load i32* %RSize                          ; <i32> [#uses=1]
  %39 = add i32 %37, %38                          ; <i32> [#uses=1]
  %40 = sub i32 %36, %39                          ; <i32> [#uses=1]
  store i32 %40, i32* %Middle
  %41 = load i32* %6                              ; <i32> [#uses=1]
  %42 = load i32* %Middle                         ; <i32> [#uses=1]
  %43 = add i32 %41, %42                          ; <i32> [#uses=1]
  store i32 %43, i32* %RightOffset
  %44 = call i32 @get_local_id(i32 0)             ; <i32> [#uses=1]
  store i32 %44, i32* %i
  br label %45

; <label>:45                                      ; preds = %70, %0
  %46 = load i32* %i                              ; <i32> [#uses=1]
  %47 = load i32* %6                              ; <i32> [#uses=1]
  %48 = icmp ult i32 %46, %47                     ; <i1> [#uses=1]
  br i1 %48, label %49, label %74

; <label>:49                                      ; preds = %45
  %50 = load %struct._image2d_t** %1              ; <%struct._image2d_t*> [#uses=1]
  %51 = load <4 x i32>* %3                        ; <<4 x i32>> [#uses=1]
  %52 = extractelement <4 x i32> %51, i32 0       ; <i32> [#uses=1]
  %53 = load i32* %i                              ; <i32> [#uses=1]
  %54 = add nsw i32 %52, %53                      ; <i32> [#uses=1]
  %55 = insertelement <2 x i32> undef, i32 %54, i32 0 ; <<2 x i32>> [#uses=1]
  %56 = load i32* %yOffset                        ; <i32> [#uses=1]
  %57 = insertelement <2 x i32> %55, i32 %56, i32 1 ; <<2 x i32>> [#uses=1]
  store <2 x i32> %57, <2 x i32>* %8
  %58 = load <2 x i32>* %8                        ; <<2 x i32>> [#uses=1]
  %59 = call <4 x i32> @_Z12read_imageuiP10_image2d_tjU8__vector2i(%struct._image2d_t* %50, i32 1, <2 x i32> %58) ; <<4 x i32>> [#uses=1]
  store <4 x i32> %59, <4 x i32>* %c
  %60 = load <4 x i32>* %c                        ; <<4 x i32>> [#uses=1]
  %61 = extractelement <4 x i32> %60, i32 0       ; <i32> [#uses=1]
  %62 = call zeroext i8 @_Z17convert_uchar_satj(i32 %61) ; <i8> [#uses=1]
  %63 = load i8 addrspace(1)** %2                 ; <i8 addrspace(1)*> [#uses=1]
  %64 = load i32* %i                              ; <i32> [#uses=1]
  %65 = sext i32 %64 to i64                       ; <i64> [#uses=1]
  %66 = getelementptr inbounds i8 addrspace(1)* %63, i64 %65 ; <i8 addrspace(1)*> [#uses=1]
  %67 = load i32* %DstOffset                      ; <i32> [#uses=1]
  %68 = zext i32 %67 to i64                       ; <i64> [#uses=1]
  %69 = getelementptr inbounds i8 addrspace(1)* %66, i64 %68 ; <i8 addrspace(1)*> [#uses=1]
  store i8 %62, i8 addrspace(1)* %69
  br label %70

; <label>:70                                      ; preds = %49
  %71 = call i32 @get_local_size(i32 0)           ; <i32> [#uses=1]
  %72 = load i32* %i                              ; <i32> [#uses=1]
  %73 = add i32 %72, %71                          ; <i32> [#uses=1]
  store i32 %73, i32* %i
  br label %45

; <label>:74                                      ; preds = %45
  %75 = call i32 @get_local_id(i32 0)             ; <i32> [#uses=1]
  store i32 %75, i32* %i1
  br label %76

; <label>:76                                      ; preds = %106, %74
  %77 = load i32* %i1                             ; <i32> [#uses=1]
  %78 = load i32* %RSize                          ; <i32> [#uses=1]
  %79 = icmp ult i32 %77, %78                     ; <i1> [#uses=1]
  br i1 %79, label %80, label %110

; <label>:80                                      ; preds = %76
  %81 = load %struct._image2d_t** %1              ; <%struct._image2d_t*> [#uses=1]
  %82 = load <4 x i32>* %3                        ; <<4 x i32>> [#uses=1]
  %83 = extractelement <4 x i32> %82, i32 0       ; <i32> [#uses=1]
  %84 = load i32* %RightOffset                    ; <i32> [#uses=1]
  %85 = add i32 %83, %84                          ; <i32> [#uses=1]
  %86 = load i32* %i1                             ; <i32> [#uses=1]
  %87 = add i32 %85, %86                          ; <i32> [#uses=1]
  %88 = insertelement <2 x i32> undef, i32 %87, i32 0 ; <<2 x i32>> [#uses=1]
  %89 = load i32* %yOffset                        ; <i32> [#uses=1]
  %90 = insertelement <2 x i32> %88, i32 %89, i32 1 ; <<2 x i32>> [#uses=1]
  store <2 x i32> %90, <2 x i32>* %9
  %91 = load <2 x i32>* %9                        ; <<2 x i32>> [#uses=1]
  %92 = call <4 x i32> @_Z12read_imageuiP10_image2d_tjU8__vector2i(%struct._image2d_t* %81, i32 1, <2 x i32> %91) ; <<4 x i32>> [#uses=1]
  store <4 x i32> %92, <4 x i32>* %c2
  %93 = load <4 x i32>* %c2                       ; <<4 x i32>> [#uses=1]
  %94 = extractelement <4 x i32> %93, i32 0       ; <i32> [#uses=1]
  %95 = call zeroext i8 @_Z17convert_uchar_satj(i32 %94) ; <i8> [#uses=1]
  %96 = load i8 addrspace(1)** %2                 ; <i8 addrspace(1)*> [#uses=1]
  %97 = load i32* %i1                             ; <i32> [#uses=1]
  %98 = sext i32 %97 to i64                       ; <i64> [#uses=1]
  %99 = getelementptr inbounds i8 addrspace(1)* %96, i64 %98 ; <i8 addrspace(1)*> [#uses=1]
  %100 = load i32* %DstOffset                     ; <i32> [#uses=1]
  %101 = zext i32 %100 to i64                     ; <i64> [#uses=1]
  %102 = getelementptr inbounds i8 addrspace(1)* %99, i64 %101 ; <i8 addrspace(1)*> [#uses=1]
  %103 = load i32* %RightOffset                   ; <i32> [#uses=1]
  %104 = zext i32 %103 to i64                     ; <i64> [#uses=1]
  %105 = getelementptr inbounds i8 addrspace(1)* %102, i64 %104 ; <i8 addrspace(1)*> [#uses=1]
  store i8 %95, i8 addrspace(1)* %105
  br label %106

; <label>:106                                     ; preds = %80
  %107 = call i32 @get_local_size(i32 0)          ; <i32> [#uses=1]
  %108 = load i32* %i1                            ; <i32> [#uses=1]
  %109 = add i32 %108, %107                       ; <i32> [#uses=1]
  store i32 %109, i32* %i1
  br label %76

; <label>:110                                     ; preds = %76
  ret void
}

define void @Img2BuffByteMisAligned1D(%struct._image1d_t* %input, i8 addrspace(1)* %dst, <4 x i32> %srcOffset, i32 %dstOffset, <2 x i32> %Pitch, i32 %LSize, i32 %Region) nounwind {
  %1 = alloca %struct._image1d_t*, align 8        ; <%struct._image1d_t**> [#uses=3]
  %2 = alloca i8 addrspace(1)*, align 8           ; <i8 addrspace(1)**> [#uses=3]
  %3 = alloca <4 x i32>, align 16                 ; <<4 x i32>*> [#uses=3]
  %4 = alloca i32, align 4                        ; <i32*> [#uses=4]
  %5 = alloca <2 x i32>, align 8                  ; <<2 x i32>*> [#uses=1]
  %6 = alloca i32, align 4                        ; <i32*> [#uses=8]
  %7 = alloca i32, align 4                        ; <i32*> [#uses=3]
  %Temp = alloca i32, align 4                     ; <i32*> [#uses=2]
  %Temp1 = alloca i32, align 4                    ; <i32*> [#uses=2]
  %RSize = alloca i32, align 4                    ; <i32*> [#uses=3]
  %Middle = alloca i32, align 4                   ; <i32*> [#uses=2]
  %RightOffset = alloca i32, align 4              ; <i32*> [#uses=3]
  %i = alloca i32, align 4                        ; <i32*> [#uses=6]
  %c = alloca <4 x i32>, align 16                 ; <<4 x i32>*> [#uses=2]
  %i1 = alloca i32, align 4                       ; <i32*> [#uses=6]
  %c2 = alloca <4 x i32>, align 16                ; <<4 x i32>*> [#uses=2]
  store %struct._image1d_t* %input, %struct._image1d_t** %1
  store i8 addrspace(1)* %dst, i8 addrspace(1)** %2
  store <4 x i32> %srcOffset, <4 x i32>* %3
  store i32 %dstOffset, i32* %4
  store <2 x i32> %Pitch, <2 x i32>* %5
  store i32 %LSize, i32* %6
  store i32 %Region, i32* %7
  %8 = load i32* %6                               ; <i32> [#uses=1]
  %9 = load i32* %4                               ; <i32> [#uses=1]
  %10 = and i32 %9, 3                             ; <i32> [#uses=1]
  %11 = add i32 %8, %10                           ; <i32> [#uses=1]
  store i32 %11, i32* %Temp
  %12 = load i32* %Temp                           ; <i32> [#uses=1]
  %13 = and i32 %12, 3                            ; <i32> [#uses=1]
  %14 = sub i32 4, %13                            ; <i32> [#uses=1]
  %15 = and i32 %14, 3                            ; <i32> [#uses=1]
  store i32 %15, i32* %Temp1
  %16 = load i32* %Temp1                          ; <i32> [#uses=1]
  %17 = load i32* %6                              ; <i32> [#uses=1]
  %18 = add i32 %17, %16                          ; <i32> [#uses=1]
  store i32 %18, i32* %6
  %19 = load i32* %7                              ; <i32> [#uses=1]
  %20 = load i32* %6                              ; <i32> [#uses=1]
  %21 = sub i32 %19, %20                          ; <i32> [#uses=1]
  %22 = and i32 %21, 15                           ; <i32> [#uses=1]
  store i32 %22, i32* %RSize
  %23 = load i32* %7                              ; <i32> [#uses=1]
  %24 = load i32* %6                              ; <i32> [#uses=1]
  %25 = load i32* %RSize                          ; <i32> [#uses=1]
  %26 = add i32 %24, %25                          ; <i32> [#uses=1]
  %27 = sub i32 %23, %26                          ; <i32> [#uses=1]
  store i32 %27, i32* %Middle
  %28 = load i32* %6                              ; <i32> [#uses=1]
  %29 = load i32* %Middle                         ; <i32> [#uses=1]
  %30 = add i32 %28, %29                          ; <i32> [#uses=1]
  store i32 %30, i32* %RightOffset
  %31 = call i32 @get_local_id(i32 0)             ; <i32> [#uses=1]
  store i32 %31, i32* %i
  br label %32

; <label>:32                                      ; preds = %53, %0
  %33 = load i32* %i                              ; <i32> [#uses=1]
  %34 = load i32* %6                              ; <i32> [#uses=1]
  %35 = icmp ult i32 %33, %34                     ; <i1> [#uses=1]
  br i1 %35, label %36, label %57

; <label>:36                                      ; preds = %32
  %37 = load %struct._image1d_t** %1              ; <%struct._image1d_t*> [#uses=1]
  %38 = load <4 x i32>* %3                        ; <<4 x i32>> [#uses=1]
  %39 = extractelement <4 x i32> %38, i32 0       ; <i32> [#uses=1]
  %40 = load i32* %i                              ; <i32> [#uses=1]
  %41 = add nsw i32 %39, %40                      ; <i32> [#uses=1]
  %42 = call <4 x i32> @_Z12read_imageuiP10_image1d_tji(%struct._image1d_t* %37, i32 1, i32 %41) ; <<4 x i32>> [#uses=1]
  store <4 x i32> %42, <4 x i32>* %c
  %43 = load <4 x i32>* %c                        ; <<4 x i32>> [#uses=1]
  %44 = extractelement <4 x i32> %43, i32 0       ; <i32> [#uses=1]
  %45 = call zeroext i8 @_Z17convert_uchar_satj(i32 %44) ; <i8> [#uses=1]
  %46 = load i8 addrspace(1)** %2                 ; <i8 addrspace(1)*> [#uses=1]
  %47 = load i32* %i                              ; <i32> [#uses=1]
  %48 = sext i32 %47 to i64                       ; <i64> [#uses=1]
  %49 = getelementptr inbounds i8 addrspace(1)* %46, i64 %48 ; <i8 addrspace(1)*> [#uses=1]
  %50 = load i32* %4                              ; <i32> [#uses=1]
  %51 = sext i32 %50 to i64                       ; <i64> [#uses=1]
  %52 = getelementptr inbounds i8 addrspace(1)* %49, i64 %51 ; <i8 addrspace(1)*> [#uses=1]
  store i8 %45, i8 addrspace(1)* %52
  br label %53

; <label>:53                                      ; preds = %36
  %54 = call i32 @get_local_size(i32 0)           ; <i32> [#uses=1]
  %55 = load i32* %i                              ; <i32> [#uses=1]
  %56 = add i32 %55, %54                          ; <i32> [#uses=1]
  store i32 %56, i32* %i
  br label %32

; <label>:57                                      ; preds = %32
  %58 = call i32 @get_local_id(i32 0)             ; <i32> [#uses=1]
  store i32 %58, i32* %i1
  br label %59

; <label>:59                       